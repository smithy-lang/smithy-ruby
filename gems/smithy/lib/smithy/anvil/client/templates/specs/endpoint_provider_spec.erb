# frozen_string_literal: true

# This is generated code!

require_relative 'spec_helper'

module <%= namespace %>
  describe EndpointProvider do
    subject { EndpointProvider.new }

    <% test_cases.each do |test_case| %>
    context "<%= test_case.documentation %>" do
      let(:expected) do
        <%= test_case.expect %>
      end

    it 'produces the expected output from the EndpointProvider' do
      params = EndpointParameters.new(**<%= test_case.params %>)
      <% if test_case.expect_error? %>
      expect do
        subject.resolve_endpoint(params)
      end.to raise_error(ArgumentError, expected['error'])
      <% else %>
      endpoint = subject.resolve_endpoint(params)
      expect(endpoint.uri).to eq(expected['endpoint']['url'])
      expect(endpoint.headers).to eq(expected['endpoint']['headers'] || {})
      expect(endpoint.properties).to eq(expected['endpoint']['properties'] || {})
      <% end %>
    end
  end
    <%- end -%>
  end
end