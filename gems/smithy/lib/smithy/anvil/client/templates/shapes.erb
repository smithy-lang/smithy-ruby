# frozen_string_literal: true

# This is generated code!

module <%= namespace %>
  module Shapes
    include Smithy::Client::Shapes

<%# Shapes definition -%>
<%- @shapes.each do |shape| -%>
    <%= shape.name %> = <%= shape.shape_type %>.new(
      shape_id: "<%= shape.id %>",
    <%- if shape.typed -%>
      type: Types::<%= shape.name %>,
    <%- end -%>
    <%- unless shape.traits.empty? -%>
      traits: <%= shape.traits %>
    <%- end -%>
    )
<%- end -%>
<%# Shapes members definition %>
<%- shapes_with_members.each do |shape| -%>
    <%- shape.members.each do |member| -%>
    <%= shape.name %>.add_member(
      "<%= member.name %>",
      <%= member.shape %>,
    <%- unless member.traits.empty? -%>
      traits: <%= member.traits %>
    <%- end -%>
    )
    <%- end -%>
<%- end -%>
<%# Operation shapes definition %>
<%- @operation_shapes.each do |shape| -%>
    <%= shape.name %> = OperationShape.new(
      shape_id: "<%= shape.id %>",
      input: <%= shape.input %>,
      output: <%= shape.output %>,
  <%- unless shape.errors.empty? -%>
      errors: [
    <%- shape.errors.each do |err| -%>
        <%= err %>
    <%- end.join(',') -%>
      ],
  <%- end -%>
  <%- unless shape.traits.empty? -%>
      traits: <%= shape.traits %>
  <%- end -%>
    )
<% end -%>
<%# Service shape definition %>
    <%= @service_shape.name.upcase %> = ServiceShape.new(
      shape_id: "<%= @service_shape.id %>",
      version: "<%= @service_shape.version %>",
    <%- unless @service_shape.traits.empty? -%>
      traits: <%= @service_shape.traits %>
    <%- end -%>
    ).tap do | service |
    <%- @operation_shapes.each do |shape| -%>
      service.add_operation("<%= shape.id %>", <%= shape.name %>)
    <%- end -%>
    end
  end
end
